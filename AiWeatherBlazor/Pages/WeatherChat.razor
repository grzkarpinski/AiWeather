@page "/weather-chat"
@using System.Net.Http.Json

<div class="weather-page container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-10 col-md-8 col-lg-6">
            <h2 class="mb-3 text-center text-primary">Pogodowy komentarz AI</h2>

            <div class="card minimal-card mb-3">
                <div class="card-body p-3">
                    <label for="cityInput" class="form-label small text-muted">Miasto</label>
                    <input id="cityInput" @bind="city" @bind:event="oninput" class="form-control form-control-lg mb-2" placeholder="Wpisz nazwÍ miasta" />

                    <button class="btn btn-accent w-100" @onclick="GetWeatherChat" disabled="@(loading || string.IsNullOrWhiteSpace(city))">
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true" style="display:@(loading ? "inline-block" : "none")"></span>
                        Sprawdü pogodÍ
                    </button>

                    @if (!string.IsNullOrEmpty(error))
                    {
                        <div class="text-danger small mt-2">@error</div>
                    }
                </div>
            </div>

            <div class="card minimal-card">
                <div class="card-body p-3">
                    @if (response != null)
                    {
                        <div class="result-container result-fade">
                            <div class="d-flex align-items-center gap-3 mb-2">
                                <div class="weather-icon-large">@((MarkupString)GetWeatherSvg(response.WeatherDescription))</div>
                                <div>
                                    <div class="h4 mb-0">@response.City</div>
                                    <div class="text-muted small">@response.WeatherDescription</div>
                                </div>
                            </div>

                            <div class="d-flex gap-3 mb-3 stats-minimal">
                                <div>
                                    <div class="stat-value-large">@response.Temperature∞C</div>
                                    <div class="text-muted small">Temperatura</div>
                                </div>
                                <div>
                                    <div class="stat-value-large">@response.WindSpeed km/h</div>
                                    <div class="text-muted small">Wiatr</div>
                                </div>
                            </div>

                            <div class="ai-comment-minimal">
                                @((MarkupString)EncodeForDisplay(response.AiComment))
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted small py-3">Brak danych. Wprowadü miasto i kliknij "Sprawdü pogodÍ".</div>
                    }
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    private string city = string.Empty;
    private WeatherChatResponse? response;
    private bool loading = false;
    private string error = string.Empty;

    private async Task GetWeatherChat()
    {
        error = string.Empty;
        response = null;
        loading = true;
        try
        {
            var apiUrl = $"https://localhost:7097/api/WeatherChat/{Uri.EscapeDataString(city)}";
            var http = new HttpClient();
            var httpResponse = await http.GetAsync(apiUrl);
            if (httpResponse.IsSuccessStatusCode)
            {
                response = await httpResponse.Content.ReadFromJsonAsync<WeatherChatResponse>();
                if (response == null)
                    error = "Brak odpowiedzi z serwera.";
            }
            else
            {
                var content = await httpResponse.Content.ReadAsStringAsync();
                error = $"B≥πd API ({(int)httpResponse.StatusCode}): {content}";
            }
        }
        catch (Exception ex)
        {
            error = $"B≥πd: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }

    private static string GetWeatherSvg(string description)
    {
        var d = (description ?? string.Empty).ToLowerInvariant();

        if (d.Contains("únieg") || d.Contains("snieg"))
        {
            return @"<svg class='svg-icon' width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg'>
  <path d='M16 30a6 6 0 0111.6-2.25A5 5 0 0134 33H15a1 1 0 010-2z' fill='var(--c1)' opacity='0.95'/>
  <g stroke='var(--c2)' stroke-width='1.8' stroke-linecap='round'>
    <path d='M24 20v6'/>
    <path d='M21 23l6 0'/>
    <path d='M21 27l6 0'/>
  </g>
</svg>";
        }

        if (d.Contains("deszcz") || d.Contains("opad"))
        {
            return @"<svg class='svg-icon' width='48' height='48' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg'>
  <path d='M14 26a7 7 0 0113.6-2.6A6 6 0 0136 29H14z' fill='var(--c1)' opacity='0.95'/>
  <g stroke='var(--c2)' stroke-width='2' stroke-linecap='round'>
    <path d='M20 33l0 5'/>
    <path d='M24 33l0 6'/>
    <path d='M28 33l0 5'/>
  </g>
</svg>";
        }

        if (d.Contains("burza"))
        {
            return @"<svg class='svg-icon' width='48' height='48' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg'>
  <path d='M12 26a7 7 0 0113.6-2.6A6 6 0 0134 29H12z' fill='var(--c1)' opacity='0.95'/>
  <path d='M22 30l-4 8h6l-2 6' fill='var(--c3)' stroke='none'/>
</svg>";
        }

        if (d.Contains("mg") || d.Contains("mg≥a") || d.Contains("mgla"))
        {
            return @"<svg class='svg-icon' width='48' height='48' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg'>
  <g fill='none' stroke='var(--c1)' stroke-width='2' stroke-linecap='round'>
    <path d='M10 26h28' opacity='0.9'/>
    <path d='M8 32h24' opacity='0.7'/>
    <path d='M12 38h20' opacity='0.5'/>
  </g>
</svg>";
        }

        if (d.Contains("bezchmurnie") || d.Contains("s≥onecz") || d.Contains("slonecz"))
        {
            return @"<svg class='svg-icon' width='48' height='48' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg'>
  <circle cx='24' cy='18' r='7' fill='var(--c2)' />
  <g stroke='var(--c1)' stroke-width='2' stroke-linecap='round'>
    <path d='M24 6v-2'/>
    <path d='M24 44v-2'/>
    <path d='M6 24h-2'/>
    <path d='M44 24h-2'/>
    <path d='M10 10l-1.4-1.4'/>
    <path d='M38 38l1.4 1.4'/>
    <path d='M10 38l-1.4 1.4'/>
    <path d='M38 10l1.4-1.4'/>
  </g>
</svg>";
        }

        // default / partly cloudy
        return @"<svg class='svg-icon' width='48' height='48' viewBox='0 0 48 48' xmlns='http://www.w3.org/2000/svg'>
  <path d='M16 26a6 6 0 0111.6-2.25A5 5 0 0134 29H15a1 1 0 010-2z' fill='var(--c1)' opacity='0.95'/>
  <circle cx='32' cy='16' r='6' fill='var(--c2)' opacity='0.95'/>
</svg>";
    }

    private static string EncodeForDisplay(string text)
    {
        return System.Net.WebUtility.HtmlEncode(text).Replace("\n", "<br />");
    }

    [Inject] NavigationManager NavigationManager { get; set; } = default!;

    public class WeatherChatResponse
    {
        public string City { get; set; } = string.Empty;
        public double Temperature { get; set; }
        public double WindSpeed { get; set; }
        public string WeatherDescription { get; set; } = string.Empty;
        public string AiComment { get; set; } = string.Empty;
    }
}